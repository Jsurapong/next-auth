// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @unique
  email        String         @unique
  f_name       String
  l_name       String
  password     String
  type         Int // 1=admin 2=teacher_l2 3=teacher_l1 4=student
  info         String?
  room         Room?          @relation(fields: [roomId], references: [id])
  roomId       Int?
  deleted      Boolean        @default(false)
  checkStudent CheckStudent[]
}

model Department {
  id      Int     @id @default(autoincrement())
  name    String
  Room    Room[]
  deleted Boolean @default(false)
}

model Room {
  id           Int         @id @default(autoincrement())
  name         String
  user         User[]
  teacherId    Int
  department   Department  @relation(fields: [departmentId], references: [id])
  departmentId Int
  date         DateTime
  term         Int // 1 2 3 4 
  year         Int // 1 2 3 4 5 ปวช 1,2,3 ปวส 1,2
  deleted      Boolean     @default(false)
  checkRoomId  Int?
  checkRoom    CheckRoom[]
}

model CheckRoom {
  id           Int            @id @default(autoincrement())
  date         DateTime
  isPass       Boolean        @default(false)
  room         Room           @relation(fields: [roomId], references: [id])
  roomId       Int
  time         Int
  term         Int // 1 2 3 4 
  year         Int // 1 2 3 4 5 ปวช 1,2,3 ปวส 1,2
  deleted      Boolean        @default(false)
  checkStudent CheckStudent[]
}

model CheckStudent {
  id          Int        @id @default(autoincrement())
  user        User       @relation(fields: [userId], references: [id])
  userId      Int
  isPass      Boolean    @default(false)
  deleted     Boolean    @default(false)
  checkRoom   CheckRoom? @relation(fields: [checkRoomId], references: [id], onDelete: Cascade)
  checkRoomId Int?
  remark      String?

  @@unique([checkRoomId, userId])
}
